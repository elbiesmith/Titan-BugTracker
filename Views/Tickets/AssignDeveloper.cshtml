@using Titan_BugTracker.Models.Enums
@model Titan_BugTracker.Models.ViewModels.AssignDeveloperViewModel

@{
    ViewData["Title"] = "Create";
}
<div class="page-content-tab">
    <h4>Choose Developer</h4>
    <hr />
    <div class="row">
        <div class="col-md-4 card">

            <div class="card-header">
                <div class="col-3">
                    @if (Model.Project.FileData != null)
                    {
                        <img src="data:image/*;base64, @(Convert.ToBase64String(Model.Project.FileData))" alt="" class="thumb-lg rounded mx-3">
                    }
                    else
                    {
                        <img src="~/img/no-image.png" class="thumb-lg rounded mx-3" />
                    }
                
                    <h5>@Model.Project.Name</h5>
                </div>


            </div>

            <div class="card-body">
                <form asp-action="AssignDeveloper" method="post">
                    <input asp-for="Ticket.Id" hidden />
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <div class="form-group">
                        <label  class="control-label">Choose Developer</label>
                        <select asp-for="DeveloperId" asp-items="@Model.Developers" class="form-control">
                            <option></option>
                        </select>
                        <span asp-validation-for="Ticket.Title" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <input type="submit" value="Assign" class="btn btn-primary mt-2" />
                    </div>
                </form>
            </div>
        </div>
    </div>


    @if (User.IsInRole(Roles.Admin.ToString()) || User.IsInRole(Roles.ProjectManager.ToString()))
    {
        <div>
            <a asp-action="AllTickets">Back to List</a>
        </div>
    }
    else
    {
        <div>
            <a asp-action="MyTickets">Back to List</a>
        </div>
    }
</div>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}